{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21653\\\\Desktop\\\\Projects\\\\Local\\\\BatteryForm\\\\battery-form\\\\frontend\\\\src\\\\components\\\\formComponents\\\\batterymaterials.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Headline from '../../layouts/headline';\nimport ProgressBar from './progressbare';\nimport Footerform from '../../layouts/footerform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaireBatteryComposition = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate(); // Utilisation correcte de useNavigate pour la navigation\n\n  const handleSubmit = () => {\n    // Logique de soumission du formulaire ici\n    // Par exemple, envoyer les données au serveur\n    // et mettre à jour l'état de la progression\n    setProgress(100); // Marquer la progression comme terminée à 100%\n    // Ici, vous pouvez ajouter du code supplémentaire pour gérer la soumission du formulaire\n  };\n  const handleCancel = () => {\n    // Logique d'annulation du formulaire ici\n    // Par exemple, réinitialiser les champs de formulaire\n    setProgress(0); // Réinitialiser la progression\n    // Ici, vous pouvez ajouter du code supplémentaire pour gérer l'annulation du formulaire\n  };\n  const handleNext = () => {\n    // Logique pour le bouton Next\n    console.log(\"Next button clicked\");\n    // Par exemple, naviguer vers une autre page\n    navigate('/performanceanddurability'); // Remplacez '/batterySafetyRequirements' par votre chemin de route réel\n  };\n  const handlePrevious = () => {\n    // Logique pour le bouton Previous\n    console.log(\"Previous button clicked\");\n    // Par exemple, naviguer vers une autre page\n    navigate('/designofcircularity'); // Remplacez '/generalInformation' par votre chemin de route réel\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(FormulaireBatteryComposition, \"p9lwZ8SkL58jC4rkDLqgF+zqAK8=\", false, function () {\n  return [useNavigate];\n});\n_c = FormulaireBatteryComposition;\nexport default FormulaireBatteryComposition;\nvar _c;\n$RefreshReg$(_c, \"FormulaireBatteryComposition\");","map":{"version":3,"names":["React","useState","useNavigate","Headline","ProgressBar","Footerform","jsxDEV","_jsxDEV","FormulaireBatteryComposition","_s","progress","setProgress","navigate","handleSubmit","handleCancel","handleNext","console","log","handlePrevious","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/21653/Desktop/Projects/Local/BatteryForm/battery-form/frontend/src/components/formComponents/batterymaterials.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Headline from '../../layouts/headline';\r\nimport ProgressBar from './progressbare';\r\nimport Footerform from '../../layouts/footerform';\r\n\r\nconst FormulaireBatteryComposition = () => {\r\n    const [progress, setProgress] = useState(0);\r\n    const navigate = useNavigate(); // Utilisation correcte de useNavigate pour la navigation\r\n  \r\n    const handleSubmit = () => {\r\n      // Logique de soumission du formulaire ici\r\n      // Par exemple, envoyer les données au serveur\r\n      // et mettre à jour l'état de la progression\r\n      setProgress(100); // Marquer la progression comme terminée à 100%\r\n      // Ici, vous pouvez ajouter du code supplémentaire pour gérer la soumission du formulaire\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      // Logique d'annulation du formulaire ici\r\n      // Par exemple, réinitialiser les champs de formulaire\r\n      setProgress(0); // Réinitialiser la progression\r\n      // Ici, vous pouvez ajouter du code supplémentaire pour gérer l'annulation du formulaire\r\n    };\r\n  \r\n    const handleNext = () => {\r\n      // Logique pour le bouton Next\r\n      console.log(\"Next button clicked\");\r\n      // Par exemple, naviguer vers une autre page\r\n      navigate('/performanceanddurability'); // Remplacez '/batterySafetyRequirements' par votre chemin de route réel\r\n    };\r\n  \r\n    const handlePrevious = () => {\r\n      // Logique pour le bouton Previous\r\n      console.log(\"Previous button clicked\");\r\n      // Par exemple, naviguer vers une autre page\r\n      navigate('/designofcircularity'); // Remplacez '/generalInformation' par votre chemin de route réel\r\n    };\r\n  \r\n    return (\r\n      <div className=\"mt-8\">\r\n      \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default FormulaireBatteryComposition\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACAF,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;IACAL,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC;IACAL,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEZ,CAAC;AAAAd,EAAA,CAtCKD,4BAA4B;EAAA,QAEbN,WAAW;AAAA;AAAAsB,EAAA,GAF1BhB,4BAA4B;AAwClC,eAAeA,4BAA4B;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}